{"version":3,"sources":["img/jobs.jpg","panels/Home.js","App.js","index.js"],"names":["module","exports","osName","platform","jobs","require","db","Home","props","state","qrImage","qrImageNew","qrParams","text","correctLevel","dotScale","size","margin","whiteMargin","colorDark","colorLight","autoColor","maskedDots","backgroundDimming","gifBackground","undefined","logoImage","logoScale","logoMargin","logoCornerRadius","binarize","binarizeThreshold","id","this","changeParams","e","key","value","target","newValue","length","setState","className","type","top","placeholder","onChange","rows","maxLength","src","alt","bgSrc","callback","img","updateImage","before","reader","FileReader","onloadend","result","readAsDataURL","files","level","onClick","bridge","send","IOS","React","Component","App","useState","activePanel","setActivePanel","fetchedUser","setUser","setPopout","useEffect","a","user","subscribe","detail","data","schemeAttribute","document","createAttribute","scheme","body","attributes","setNamedItem","fetchData","go","currentTarget","dataset","to","ReactDOM","render","getElementById"],"mappings":"qJAAAA,EAAOC,QAAU,IAA0B,kC,4pBCiBrCC,G,OAASC,eACTC,EAAOC,EAAQ,KACfC,EAAKD,EAAQ,KAuKJE,E,YAlKd,WAAYC,GAAQ,IAAD,8BAClB,4CAAMA,KAEDC,MAAQ,CACZC,QAASN,EACTO,WAAY,GACZC,SAAU,CACTC,KAAK,yCACLC,aAAc,EACdC,SAAU,GACVC,KAAM,IACNC,OAAQ,GACRC,aAAa,EACbC,UAAW,UACXC,WAAY,UACZC,WAAW,EACXC,YAAY,EACZC,kBAAmB,gBACnBC,mBAAeC,EACfC,eAAWD,EACXE,UAAW,GACXC,WAAY,EACZC,iBAAkB,EAClBC,UAAU,EACVC,kBAAmB,MAxBH,E,sEA6BT,IAAD,OACDC,EAAMC,KAAKzB,MAAXwB,GADC,EAE8BC,KAAKxB,MAAtCC,EAFG,EAEHA,QAASC,EAFN,EAEMA,WAAYC,EAFlB,EAEkBA,SACnBC,EAAQD,EAARC,KAEDqB,EAAe,SAACC,EAAGC,GACxB,IAAIC,EACJ,GAAIF,EAAEG,OAAQ,CACb,IAAMC,EAAWJ,EAAEG,OAAOD,MAC1BA,EAAQE,EAASC,OAASD,EAAW,QAC3BJ,IACVE,EAAQF,GAGT7B,EAAG,EAAKmC,UAAS,SAAAhC,GAChB,IAAMG,EAAQ,eAAOH,EAAMG,UAI3B,OAFAA,EAASwB,GAAOC,EAET,CAACzB,eACL,MAsCL,OACC,kBAAC,IAAD,CAAOoB,GAAIA,EAAIU,UAAU,QACxB,kBAAC,IAAD,4FAKA,kBAAC,IAAD,KACC,kBAAC,IAAD,CAAUC,KAAK,OACLC,IAAI,uPACJC,YAAY,uPACZR,MAAOxB,EACPiC,SAAU,SAACX,GAAD,OAAOD,EAAaC,EAAG,SACjCY,KAAM,EACNC,UAAW,OAItB,kBAAC,IAAD,CAAKN,UAAU,WACd,kBAAC,IAAD,CAAKA,UAAU,WACd,yBAAKA,UAAU,aAAaO,IAAKvC,EAC5BwC,IAAI,aAEV,kBAAC,IAAD,CAAKR,UAAU,MACd,kBAAC,IAAD,eAASA,UAAU,QACVS,MAAOzC,EACP0C,SAAU,SAAAC,GAAG,OA7DN,SAACA,GAChB1C,IAAe0C,GAClB/C,EAAG,EAAKmC,SAAS,CAAC9B,WAAY0C,IAAO,KA2DTC,CAAYD,KACzBzC,MAKf,kBAAC,IAAD,CAAK8B,UAAU,kBACd,kBAAC,IAAD,CAAME,IAAI,qJAA6BW,OAAQ,kBAAC,IAAD,MACzCvC,KAAK,IAAI8B,SA/DC,SAACX,GACnB,IAAIqB,EAAS,IAAIC,WAEjBD,EAAOE,UAAY,WAClBpD,EAAG,EAAKmC,SAAS,CAAC/B,QAAS8C,EAAOG,SAAU,MAG7CH,EAAOI,cAAczB,EAAEG,OAAOuB,MAAM,MAuDlC,uJAKD,kBAAC,IAAD,CAAKnB,UAAU,kBACd,kBAAC,IAAD,CAAQ1B,KAAK,IAAI8C,MAAM,IAAIC,QAjDP,WACtBC,IAAOC,KAAK,yBAA0B,MAgDpC,6FAMD,kBAAC,IAAD,CAAKvB,UAAU,kBACd,kBAAC,IAAD,CAAQ1B,KAAK,IAAI8C,MAAM,IAAIC,QAjER,WACrBC,IAAOC,KAAK,uBAAwB,CACnC,gBAAmB,QACnB,KAAQ,sCAAwCtD,KA+DvC4C,OAAQ,kBAAC,IAAD,OADhB,qEAKArD,IAAWgE,KACZ,kBAAC,IAAD,CAAKxB,UAAU,kBACd,kBAAC,IAAD,CAAQ1B,KAAK,IAAI8C,MAAM,IAAIC,QA3Db,WAGhB7B,EAFqB,0EAEM,UAwDzB,sG,GA7IciC,IAAMC,WCsBVC,EApCH,WAAO,IAAD,EACqBC,mBAAS,QAD9B,mBACVC,EADU,KACGC,EADH,OAEcF,mBAAS,MAFvB,mBAEVG,EAFU,KAEGC,EAFH,OAGWJ,mBAAS,kBAAC,IAAD,CAAetD,KAAK,WAHxC,mBAGF2D,GAHE,WAKjBC,qBAAU,WAAM,4CASf,4BAAAC,EAAA,sEACoBb,IAAOC,KAAK,uBADhC,OACOa,EADP,OAECJ,EAAQI,GACRH,EAAU,MAHX,4CATe,sBACfX,IAAOe,WAAU,YAA6B,IAAD,IAA1BC,OAASrC,EAAiB,EAAjBA,KAAMsC,EAAW,EAAXA,KACjC,GAAa,yBAATtC,EAAiC,CACpC,IAAMuC,EAAkBC,SAASC,gBAAgB,UACjDF,EAAgB7C,MAAQ4C,EAAKI,OAASJ,EAAKI,OAAS,eACpDF,SAASG,KAAKC,WAAWC,aAAaN,OALzB,mCAefO,KACE,IAMH,OACC,kBAAC,IAAD,CAAMlB,YAAaA,GAGlB,kBAAC,EAAD,CAAMvC,GAAG,OAAOyC,YAAaA,EAAaiB,GARjC,SAAAvD,GACVqC,EAAerC,EAAEwD,cAAcC,QAAQC,SCxBzC7B,IAAOC,KAAK,gBAQZ6B,IAASC,OAAO,kBAAC,EAAD,MAASZ,SAASa,eAAe,W","file":"static/js/main.621bea27.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/jobs.36d787e1.jpg\";","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport bridge from '@vkontakte/vk-bridge';\nimport {platform, IOS} from '@vkontakte/vkui';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader\n\tfrom '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\nimport File from '@vkontakte/vkui/dist/components/File/File';\nimport Textarea from '@vkontakte/vkui/dist/components/Textarea/Textarea';\nimport Icon24Camera from '@vkontakte/icons/dist/24/camera';\nimport Icon24Document from '@vkontakte/icons/dist/24/document';\nimport ReactQr from 'react-awesome-qr';\nimport './Home.css'\n\nconst osName = platform();\nconst jobs = require('../img/jobs.jpg');\nconst db = require('just-debounce');\n\n// const FileSaver = require('file-saver');\n\nclass Home extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\t\n\t\tthis.state = {\n\t\t\tqrImage: jobs,\n\t\t\tqrImageNew: '',\n\t\t\tqrParams: {\n\t\t\t\ttext: `Steven Paul «Steve» Jobs - Apple`,\n\t\t\t\tcorrectLevel: 3,\n\t\t\t\tdotScale: 0.4,\n\t\t\t\tsize: 1000,\n\t\t\t\tmargin: 20,\n\t\t\t\twhiteMargin: true,\n\t\t\t\tcolorDark: \"#000000\",\n\t\t\t\tcolorLight: \"#ffffff\",\n\t\t\t\tautoColor: true,\n\t\t\t\tmaskedDots: false,\n\t\t\t\tbackgroundDimming: 'rgba(0,0,0,0)',\n\t\t\t\tgifBackground: undefined,\n\t\t\t\tlogoImage: undefined,\n\t\t\t\tlogoScale: 0.2,\n\t\t\t\tlogoMargin: 6,\n\t\t\t\tlogoCornerRadius: 8,\n\t\t\t\tbinarize: false,\n\t\t\t\tbinarizeThreshold: 128,\n\t\t\t},\n\t\t};\n\t}\n\t\n\trender() {\n\t\tconst {id} = this.props;\n\t\tlet {qrImage, qrImageNew, qrParams} = this.state;\n\t\tconst {text} = qrParams;\n\t\t\n\t\tconst changeParams = (e, key) => {\n\t\t\tlet value;\n\t\t\tif (e.target) {\n\t\t\t\tconst newValue = e.target.value;\n\t\t\t\tvalue = newValue.length ? newValue : '';\n\t\t\t} else if (e) {\n\t\t\t\tvalue = e;\n\t\t\t}\n\t\t\t\n\t\t\tdb(this.setState(state => {\n\t\t\t\tconst qrParams = {...state.qrParams};\n\t\t\t\t\n\t\t\t\tqrParams[key] = value;\n\t\t\t\t\n\t\t\t\treturn {qrParams};\n\t\t\t}), 1000);\n\t\t};\n\t\t\n\t\tconst updateImage = (img) => {\n\t\t\tif (qrImageNew !== img) {\n\t\t\t\tdb(this.setState({qrImageNew: img}), 1000);\n\t\t\t}\n\t\t};\n\t\t\n\t\tconst uploadFile = (e) => {\n\t\t\tlet reader = new FileReader();\n\t\t\t\n\t\t\treader.onloadend = () => {\n\t\t\t\tdb(this.setState({qrImage: reader.result}), 1000);\n\t\t\t};\n\t\t\t\n\t\t\treader.readAsDataURL(e.target.files[0]);\n\t\t};\n\t\t\n\t\tconst downloadImage = () => {\n\t\t\tbridge.send(\"VKWebAppShowStoryBox\", {\n\t\t\t\t\"background_type\": \"image\",\n\t\t\t\t\"blob\": \"data:image/png;base64,<blob-base64>\" + qrImageNew,\n\t\t\t});\n\t\t\t\n\t\t\t// FileSaver.saveAs(qrImageNew, \"qr.png\", {autoBom: true});\n\t\t};\n\t\t\n\t\tconst openCodeReader = () => {\n\t\t\tbridge.send(\"VKWebAppOpenCodeReader\", {});\n\t\t};\n\t\t\n\t\tconst donation = () => {\n\t\t\tconst donationLink = 'https://vk.com/vkpay#action=transfer-to-user&user_id=34158861&from_qr=1';\n\t\t\t\n\t\t\tchangeParams(donationLink, 'text');\n\t\t};\n\t\t\n\t\treturn (\n\t\t\t<Panel id={id} className=\"Home\">\n\t\t\t\t<PanelHeader\n\t\t\t\t>\n\t\t\t\t\tQR код из картинки\n\t\t\t\t</PanelHeader>\n\t\t\t\t\n\t\t\t\t<Div>\n\t\t\t\t\t<Textarea type=\"text\"\n\t\t\t\t\t          top=\"Введите текст, который будет зашифрован в QR-коде\"\n\t\t\t\t\t          placeholder=\"Введите текст, который будет зашифрован в QR-коде\"\n\t\t\t\t\t          value={text}\n\t\t\t\t\t          onChange={(e) => changeParams(e, 'text')}\n\t\t\t\t\t          rows={1}\n\t\t\t\t\t          maxLength={110}\n\t\t\t\t\t/>\n\t\t\t\t</Div>\n\t\t\t\t\n\t\t\t\t<Div className=\"qrBlock\">\n\t\t\t\t\t<Div className=\"picture\">\n\t\t\t\t\t\t<img className=\"pictureImg\" src={qrImage}\n\t\t\t\t\t\t     alt=\"picture\"/>\n\t\t\t\t\t</Div>\n\t\t\t\t\t<Div className=\"qr\">\n\t\t\t\t\t\t<ReactQr className=\"qrImg\"\n\t\t\t\t\t\t         bgSrc={qrImage}\n\t\t\t\t\t\t         callback={img => updateImage(img)}\n\t\t\t\t\t\t         {...qrParams}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Div>\n\t\t\t\t</Div>\n\t\t\t\t\n\t\t\t\t<Div className=\"downloadButton\">\n\t\t\t\t\t<File top=\"Загрузите ваше изображение\" before={<Icon24Camera/>}\n\t\t\t\t\t      size=\"l\" onChange={uploadFile}>\n\t\t\t\t\t\tЗагрузить своё изображение\n\t\t\t\t\t</File>\n\t\t\t\t</Div>\n\t\t\t\t<Div className=\"downloadButton\">\n\t\t\t\t\t<Button size=\"m\" level=\"2\" onClick={openCodeReader}>\n\t\t\t\t\t\tСканировать QR-код\n\t\t\t\t\t</Button>\n\t\t\t\t\n\t\t\t\t</Div>\n\t\t\t\t\n\t\t\t\t<Div className=\"downloadButton\">\n\t\t\t\t\t<Button size=\"m\" level=\"2\" onClick={downloadImage}\n\t\t\t\t\t        before={<Icon24Document/>}>\n\t\t\t\t\t\tСкачать QR-код\n\t\t\t\t\t</Button>\n\t\t\t\t</Div>\n\t\t\t\t{osName !== IOS &&\n\t\t\t\t<Div className=\"downloadButton\">\n\t\t\t\t\t<Button size=\"m\" level=\"2\" onClick={donation}>\n\t\t\t\t\t\tСсылочка на донат\n\t\t\t\t\t</Button>\n\t\t\t\t</Div>}\n\t\t\t</Panel>\n\t\t)\n\t}\n}\n\nHome.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n\tfetchedUser: PropTypes.shape({\n\t\tphoto_200: PropTypes.string,\n\t\tfirst_name: PropTypes.string,\n\t\tlast_name: PropTypes.string,\n\t\tcity: PropTypes.shape({\n\t\t\ttitle: PropTypes.string,\n\t\t}),\n\t}),\n};\n\nexport default Home;\n","import React, {useState, useEffect} from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport View from '@vkontakte/vkui/dist/components/View/View';\nimport ScreenSpinner\n\tfrom '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport Home from './panels/Home';\n\nconst App = () => {\n\tconst [activePanel, setActivePanel] = useState('home');\n\tconst [fetchedUser, setUser] = useState(null);\n\tconst [popout, setPopout] = useState(<ScreenSpinner size='large'/>);\n\t\n\tuseEffect(() => {\n\t\tbridge.subscribe(({detail: {type, data}}) => {\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\n\t\t\t\tconst schemeAttribute = document.createAttribute('scheme');\n\t\t\t\tschemeAttribute.value = data.scheme ? data.scheme : 'client_light';\n\t\t\t\tdocument.body.attributes.setNamedItem(schemeAttribute);\n\t\t\t}\n\t\t});\n\t\t\n\t\tasync function fetchData() {\n\t\t\tconst user = await bridge.send('VKWebAppGetUserInfo');\n\t\t\tsetUser(user);\n\t\t\tsetPopout(null);\n\t\t}\n\t\t\n\t\tfetchData();\n\t}, []);\n\t\n\tconst go = e => {\n\t\tsetActivePanel(e.currentTarget.dataset.to);\n\t};\n\t\n\treturn (\n\t\t<View activePanel={activePanel}\n\t\t\t// popout={popout}\n\t\t>\n\t\t\t<Home id='home' fetchedUser={fetchedUser} go={go}/>\n\t\t</View>\n\t);\n};\n\nexport default App;\n\n","import 'core-js/features/map';\nimport 'core-js/features/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport bridge from '@vkontakte/vk-bridge';\nimport App from './App';\n// import registerServiceWorker from './sw';\n\n// Init VK  Mini App\nbridge.send('VKWebAppInit');\n\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\n// расскомментируйте строку с registerServiceWorker();\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT\n// registerServiceWorker();\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}