{"version":3,"sources":["panels/Home.js","App.js","index.js"],"names":["osName","platform","debounce","require","FileSaver","Home","props","state","qrImage","qrImageNew","qrText","qrParams","correctLevel","size","dotScale","this","id","go","className","left","onClick","data-to","IOS","type","defaultValue","onChange","e","text","target","value","setState","src","alt","bgSrc","callback","img","updateImage","top","before","reader","FileReader","onloadend","result","readAsDataURL","files","level","saveAs","React","Component","App","useState","activePanel","setActivePanel","fetchedUser","setUser","setPopout","useEffect","a","bridge","send","user","subscribe","detail","data","schemeAttribute","document","createAttribute","scheme","body","attributes","setNamedItem","fetchData","currentTarget","dataset","to","ReactDOM","render","getElementById"],"mappings":"yzBAmBMA,G,OAASC,eACTC,EAAWC,EAAQ,KACnBC,EAAYD,EAAQ,KA2GXE,E,YAxGd,WAAYC,GAAQ,IAAD,8BAClB,4CAAMA,KAEDC,MAAQ,CACZC,QAAS,iGACTC,WAAY,GACZC,OAAQ,gCACRC,SAAU,CACTC,aAAc,EACdC,KAAM,IACNC,SAAU,KAVM,E,sEAeT,IAAD,SACSC,KAAKT,MAAfU,EADC,EACDA,GAAIC,EADH,EACGA,GADH,EAEsCF,KAAKR,MAA9CC,EAFG,EAEHA,QAASC,EAFN,EAEMA,WAAYE,EAFlB,EAEkBA,SAAUD,EAF5B,EAE4BA,OA4BpC,OACC,kBAAC,IAAD,CAAOM,GAAIA,EAAIE,UAAU,QACxB,kBAAC,IAAD,CACCC,KAAM,kBAAC,IAAD,CAAmBC,QAASH,EAAII,UAAQ,QAC5CrB,IAAWsB,IAAM,kBAAC,IAAD,MAAuB,kBAAC,IAAD,QAF3C,uFAQA,kBAAC,IAAD,KACC,kBAAC,IAAD,CAAOC,KAAK,OAAOC,aAAcd,EAAQe,SArCzB,SAACC,GACnB,IAAMC,EAAOD,EAAEE,OAAOC,MAEtB3B,EAAS,EAAK4B,SAAS,CAACpB,OAAQiB,IAAQ,SAqCvC,kBAAC,IAAD,CAAKT,UAAU,WACd,kBAAC,IAAD,CAAKA,UAAU,WACd,yBAAKA,UAAU,aAAaa,IAAKvB,EAC5BwB,IAAI,aAEV,kBAAC,IAAD,CAAKd,UAAU,MACd,kBAAC,IAAD,eAASA,UAAU,QACVS,KAAMjB,EACNuB,MAAOzB,EACP0B,SAAU,SAACC,GAAD,OA3CH,SAACA,GAChB1B,IAAe0B,GAClB,EAAKL,SAAS,CAACrB,WAAY0B,IAyCGC,CAAYD,KAC3BxB,MAKf,kBAAC,IAAD,CAAKO,UAAU,kBACd,kBAAC,IAAD,CAAMmB,IAAI,qJAA6BC,OAAQ,kBAAC,IAAD,MACzCzB,KAAK,IAAIY,SA7CC,SAACC,GACnB,IAAIa,EAAS,IAAIC,WAEjBD,EAAOE,UAAY,WAClB,EAAKX,SAAS,CAACtB,QAAS+B,EAAOG,UAGhCH,EAAOI,cAAcjB,EAAEE,OAAOgB,MAAM,MAqClC,0FAMD,kBAAC,IAAD,CAAK1B,UAAU,kBACd,kBAAC,IAAD,CAAQL,KAAK,IAAIgC,MAAM,IAAIzB,QAzCR,WACrBhB,EAAU0C,OAAOrC,EAAY,YAwC3B,0E,GAnFcsC,IAAMC,WCoBVC,EAlCH,WAAO,IAAD,EACqBC,mBAAS,QAD9B,mBACVC,EADU,KACGC,EADH,OAEcF,mBAAS,MAFvB,mBAEVG,EAFU,KAEGC,EAFH,OAGWJ,mBAAS,kBAAC,IAAD,CAAerC,KAAK,WAHxC,mBAGF0C,GAHE,WAKjBC,qBAAU,WAAM,4CASf,4BAAAC,EAAA,sEACoBC,IAAOC,KAAK,uBADhC,OACOC,EADP,OAECN,EAAQM,GACRL,EAAU,MAHX,4CATe,sBACfG,IAAOG,WAAU,YAA6B,IAAD,IAA1BC,OAASvC,EAAiB,EAAjBA,KAAMwC,EAAW,EAAXA,KACjC,GAAa,yBAATxC,EAAiC,CACpC,IAAMyC,EAAkBC,SAASC,gBAAgB,UACjDF,EAAgBnC,MAAQkC,EAAKI,OAASJ,EAAKI,OAAS,eACpDF,SAASG,KAAKC,WAAWC,aAAaN,OALzB,mCAefO,KACE,IAMH,OACC,kBAAC,IAAD,CAAMpB,YAAaA,GAClB,kBAAC,EAAD,CAAMnC,GAAG,OAAOqC,YAAaA,EAAapC,GANjC,SAAAS,GACV0B,EAAe1B,EAAE8C,cAAcC,QAAQC,SCxBzChB,IAAOC,KAAK,gBAQZgB,IAASC,OAAO,kBAAC,EAAD,MAASX,SAASY,eAAe,W","file":"static/js/main.4dd653e5.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader\n\tfrom '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\nimport File from '@vkontakte/vkui/dist/components/File/File';\nimport Input from '@vkontakte/vkui/dist/components/Input/Input';\nimport {platform, IOS} from '@vkontakte/vkui';\nimport PanelHeaderButton\n\tfrom '@vkontakte/vkui/dist/components/PanelHeaderButton/PanelHeaderButton';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\nimport Icon24Camera from '@vkontakte/icons/dist/24/camera';\nimport ReactQr from 'react-awesome-qr';\nimport './Home.css'\n\nconst osName = platform();\nconst debounce = require('debounce');\nconst FileSaver = require('file-saver');\n\nclass Home extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\t\n\t\tthis.state = {\n\t\t\tqrImage: 'https://static.vecteezy.com/system/resources/previews/000/074/969/non_2x/steve-jobs-vector.jpg',\n\t\t\tqrImageNew: '',\n\t\t\tqrText: 'https://vk.com/coin#t34158861',\n\t\t\tqrParams: {\n\t\t\t\tcorrectLevel: 3,\n\t\t\t\tsize: 1000,\n\t\t\t\tdotScale: 0.4,\n\t\t\t},\n\t\t};\n\t}\n\t\n\trender() {\n\t\tconst {id, go} = this.props;\n\t\tlet {qrImage, qrImageNew, qrParams, qrText} = this.state;\n\t\t\n\t\tconst changeText = (e) => {\n\t\t\tconst text = e.target.value;\n\t\t\t\n\t\t\tdebounce(this.setState({qrText: text}), 200);\n\t\t};\n\t\t\n\t\tconst updateImage = (img) => {\n\t\t\tif (qrImageNew !== img) {\n\t\t\t\tthis.setState({qrImageNew: img});\n\t\t\t}\n\t\t};\n\t\t\n\t\tconst uploadFile = (e) => {\n\t\t\tlet reader = new FileReader();\n\t\t\t\n\t\t\treader.onloadend = () => {\n\t\t\t\tthis.setState({qrImage: reader.result})\n\t\t\t};\n\t\t\t\n\t\t\treader.readAsDataURL(e.target.files[0]);\n\t\t};\n\t\t\n\t\tconst downloadImage = () => {\n\t\t\tFileSaver.saveAs(qrImageNew, \"qr.png\");\n\t\t};\n\t\t\n\t\treturn (\n\t\t\t<Panel id={id} className=\"Home\">\n\t\t\t\t<PanelHeader\n\t\t\t\t\tleft={<PanelHeaderButton onClick={go} data-to=\"home\">\n\t\t\t\t\t\t{osName === IOS ? <Icon28ChevronBack/> : <Icon24Back/>}\n\t\t\t\t\t</PanelHeaderButton>}\n\t\t\t\t>\n\t\t\t\t\tQR код из картинки\n\t\t\t\t</PanelHeader>\n\t\t\t\t\n\t\t\t\t<Div>\n\t\t\t\t\t<Input type=\"text\" defaultValue={qrText} onChange={changeText}/>\n\t\t\t\t</Div>\n\t\t\t\t\n\t\t\t\t<Div className=\"qrBlock\">\n\t\t\t\t\t<Div className=\"picture\">\n\t\t\t\t\t\t<img className=\"pictureImg\" src={qrImage}\n\t\t\t\t\t\t     alt=\"picture\"/>\n\t\t\t\t\t</Div>\n\t\t\t\t\t<Div className=\"qr\">\n\t\t\t\t\t\t<ReactQr className=\"qrImg\"\n\t\t\t\t\t\t         text={qrText}\n\t\t\t\t\t\t         bgSrc={qrImage}\n\t\t\t\t\t\t         callback={(img) => updateImage(img)}\n\t\t\t\t\t\t         {...qrParams}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Div>\n\t\t\t\t</Div>\n\t\t\t\t\n\t\t\t\t<Div className=\"downloadButton\">\n\t\t\t\t\t<File top=\"Загрузите ваше изображение\" before={<Icon24Camera/>}\n\t\t\t\t\t      size=\"l\" onChange={uploadFile}>\n\t\t\t\t\t\tОткрыть галерею\n\t\t\t\t\t</File>\n\t\t\t\t</Div>\n\t\t\t\t\n\t\t\t\t<Div className=\"downloadButton\">\n\t\t\t\t\t<Button size=\"m\" level=\"2\" onClick={downloadImage}>\n\t\t\t\t\t\tСкачать QR-код\n\t\t\t\t\t</Button>\n\t\t\t\t</Div>\n\t\t\t</Panel>\n\t\t)\n\t}\n}\n\nHome.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n\tfetchedUser: PropTypes.shape({\n\t\tphoto_200: PropTypes.string,\n\t\tfirst_name: PropTypes.string,\n\t\tlast_name: PropTypes.string,\n\t\tcity: PropTypes.shape({\n\t\t\ttitle: PropTypes.string,\n\t\t}),\n\t}),\n};\n\nexport default Home;\n","import React, {useState, useEffect} from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport View from '@vkontakte/vkui/dist/components/View/View';\nimport ScreenSpinner\n\tfrom '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport Home from './panels/Home';\n\nconst App = () => {\n\tconst [activePanel, setActivePanel] = useState('home');\n\tconst [fetchedUser, setUser] = useState(null);\n\tconst [popout, setPopout] = useState(<ScreenSpinner size='large'/>);\n\t\n\tuseEffect(() => {\n\t\tbridge.subscribe(({detail: {type, data}}) => {\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\n\t\t\t\tconst schemeAttribute = document.createAttribute('scheme');\n\t\t\t\tschemeAttribute.value = data.scheme ? data.scheme : 'client_light';\n\t\t\t\tdocument.body.attributes.setNamedItem(schemeAttribute);\n\t\t\t}\n\t\t});\n\t\t\n\t\tasync function fetchData() {\n\t\t\tconst user = await bridge.send('VKWebAppGetUserInfo');\n\t\t\tsetUser(user);\n\t\t\tsetPopout(null);\n\t\t}\n\t\t\n\t\tfetchData();\n\t}, []);\n\t\n\tconst go = e => {\n\t\tsetActivePanel(e.currentTarget.dataset.to);\n\t};\n\t\n\treturn (\n\t\t<View activePanel={activePanel}>\n\t\t\t<Home id='home' fetchedUser={fetchedUser} go={go}/>\n\t\t</View>\n\t);\n};\n\nexport default App;\n\n","import 'core-js/features/map';\nimport 'core-js/features/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport bridge from '@vkontakte/vk-bridge';\nimport App from './App';\n// import registerServiceWorker from './sw';\n\n// Init VK  Mini App\nbridge.send('VKWebAppInit');\n\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\n// расскомментируйте строку с registerServiceWorker();\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT\n// registerServiceWorker();\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}