{"version":3,"sources":["panels/Home.js","App.js","index.js"],"names":["osName","platform","FileSaver","require","Home","qrImage","id","go","fetchedUser","qrParams","text","first_name","last_name","correctLevel","size","dotScale","callback","data","className","left","onClick","data-to","IOS","src","photo_max_orig","alt","bgSrc","photo_200","level","saveAs","App","useState","activePanel","setActivePanel","setUser","popout","setPopout","useEffect","a","bridge","send","user","subscribe","detail","type","schemeAttribute","document","createAttribute","value","scheme","body","attributes","setNamedItem","fetchData","e","currentTarget","dataset","to","ReactDOM","render","getElementById"],"mappings":"stBAgBMA,G,OAASC,eACTC,EAAYC,EAAQ,KA8DXC,EA5DF,SAAC,GAA2B,IACpCC,EADUC,EAAyB,EAAzBA,GAAIC,EAAqB,EAArBA,GAAIC,EAAiB,EAAjBA,YAEhBC,EAAWD,GAAe,CAC/BE,KAAK,GAAD,OAAKF,EAAYG,WAAjB,YAA+BH,EAAYI,UAA3C,uFACJC,aAAc,EACdC,KAAM,IACNC,SAAU,GACVC,SAAU,SAACC,GACVZ,EAAUY,IAQZ,OAAOT,GACN,kBAAC,IAAD,CAAOF,GAAIA,EAAIY,UAAU,QACxB,kBAAC,IAAD,CACCC,KAAM,kBAAC,IAAD,CAAmBC,QAASb,EAAIc,UAAQ,QAC5CrB,IAAWsB,IAAM,kBAAC,IAAD,MAAuB,kBAAC,IAAD,QAF3C,uFAQA,kBAAC,IAAD,CAAKJ,UAAU,WACd,kBAAC,IAAD,CAAKA,UAAU,UACd,yBAAKA,UAAU,YAAYK,IAAKf,EAAYgB,eACvCC,IAAI,YAEV,kBAAC,IAAD,CAAKP,UAAU,MACd,kBAAC,IAAD,eAASA,UAAU,QACVQ,MAAOlB,EAAYmB,WAAelB,MAI7C,kBAAC,IAAD,CAAKS,UAAU,kBACd,kBAAC,IAAD,CAAQJ,KAAK,IAAIc,MAAM,IAAIR,QA1BR,WACrBlB,EAAU2B,OAAOxB,EAAS,WAyB2BgB,UAAQ,MAA3D,uECjBWS,EAhCH,WAAO,IAAD,EACqBC,mBAAS,QAD9B,mBACVC,EADU,KACGC,EADH,OAEcF,mBAAS,MAFvB,mBAEVvB,EAFU,KAEG0B,EAFH,OAGWH,mBAAS,kBAAC,IAAD,CAAejB,KAAK,WAHxC,mBAGVqB,EAHU,KAGFC,EAHE,KAKjBC,qBAAU,WAAM,4CAQf,4BAAAC,EAAA,sEACoBC,IAAOC,KAAK,uBADhC,OACOC,EADP,OAECP,EAAQO,GACRL,EAAU,MAHX,4CARe,sBACfG,IAAOG,WAAU,YAAgC,IAAD,IAA5BC,OAAUC,EAAkB,EAAlBA,KAAM3B,EAAY,EAAZA,KACnC,GAAa,yBAAT2B,EAAiC,CACpC,IAAMC,EAAkBC,SAASC,gBAAgB,UACjDF,EAAgBG,MAAQ/B,EAAKgC,OAAShC,EAAKgC,OAAS,eACpDH,SAASI,KAAKC,WAAWC,aAAaP,OALzB,mCAafQ,KACE,IAMH,OACC,kBAAC,IAAD,CAAMrB,YAAaA,EAAaG,OAAQA,GACvC,kBAAC,EAAD,CAAM7B,GAAG,OAAOE,YAAaA,EAAaD,GANjC,SAAA+C,GACVrB,EAAeqB,EAAEC,cAAcC,QAAQC,SCrBzClB,IAAOC,KAAK,gBAQZkB,IAASC,OAAO,kBAAC,EAAD,MAASb,SAASc,eAAe,W","file":"static/js/main.c5d2b6b0.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader\n\tfrom '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\nimport {platform, IOS} from '@vkontakte/vkui';\nimport PanelHeaderButton\n\tfrom '@vkontakte/vkui/dist/components/PanelHeaderButton/PanelHeaderButton';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\nimport ReactQr from 'react-awesome-qr';\nimport './Home.css'\n\nconst osName = platform();\nconst FileSaver = require('file-saver');\n\nconst Home = ({id, go, fetchedUser}) => {\n\tlet qrImage;\n\tconst qrParams = fetchedUser && {\n\t\ttext: `${fetchedUser.first_name} ${fetchedUser.last_name} - лучший человек!`,\n\t\tcorrectLevel: 3,\n\t\tsize: 1000,\n\t\tdotScale: 0.4,\n\t\tcallback: (data) => {\n\t\t\tqrImage = data;\n\t\t}\n\t};\n\t\n\tconst downloadImage = () => {\n\t\tFileSaver.saveAs(qrImage, \"qr.png\");\n\t};\n\t\n\treturn fetchedUser && (\n\t\t<Panel id={id} className=\"Home\">\n\t\t\t<PanelHeader\n\t\t\t\tleft={<PanelHeaderButton onClick={go} data-to=\"home\">\n\t\t\t\t\t{osName === IOS ? <Icon28ChevronBack/> : <Icon24Back/>}\n\t\t\t\t</PanelHeaderButton>}\n\t\t\t>\n\t\t\t\tQR код из картинки\n\t\t\t</PanelHeader>\n\t\t\t\n\t\t\t<Div className=\"qrBlock\">\n\t\t\t\t<Div className=\"avatar\">\n\t\t\t\t\t<img className=\"avatarImg\" src={fetchedUser.photo_max_orig}\n\t\t\t\t\t     alt=\"avatar\"/>\n\t\t\t\t</Div>\n\t\t\t\t<Div className=\"qr\">\n\t\t\t\t\t<ReactQr className=\"qrImg\"\n\t\t\t\t\t         bgSrc={fetchedUser.photo_200} {...qrParams} />\n\t\t\t\t</Div>\n\t\t\t</Div>\n\t\t\t\n\t\t\t<Div className=\"downloadButton\">\n\t\t\t\t<Button size=\"m\" level=\"2\" onClick={downloadImage} data-to=\"qr\">\n\t\t\t\t\tСкачать QR-код\n\t\t\t\t</Button>\n\t\t\t</Div>\n\t\t</Panel>\n\t)\n};\n\n\nHome.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n\tfetchedUser: PropTypes.shape({\n\t\tphoto_200: PropTypes.string,\n\t\tfirst_name: PropTypes.string,\n\t\tlast_name: PropTypes.string,\n\t\tcity: PropTypes.shape({\n\t\t\ttitle: PropTypes.string,\n\t\t}),\n\t}),\n};\n\nexport default Home;\n","import React, { useState, useEffect } from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport View from '@vkontakte/vkui/dist/components/View/View';\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport Home from './panels/Home';\n\nconst App = () => {\n\tconst [activePanel, setActivePanel] = useState('home');\n\tconst [fetchedUser, setUser] = useState(null);\n\tconst [popout, setPopout] = useState(<ScreenSpinner size='large' />);\n\t\n\tuseEffect(() => {\n\t\tbridge.subscribe(({ detail: { type, data }}) => {\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\n\t\t\t\tconst schemeAttribute = document.createAttribute('scheme');\n\t\t\t\tschemeAttribute.value = data.scheme ? data.scheme : 'client_light';\n\t\t\t\tdocument.body.attributes.setNamedItem(schemeAttribute);\n\t\t\t}\n\t\t});\n\t\tasync function fetchData() {\n\t\t\tconst user = await bridge.send('VKWebAppGetUserInfo');\n\t\t\tsetUser(user);\n\t\t\tsetPopout(null);\n\t\t}\n\t\tfetchData();\n\t}, []);\n\n\tconst go = e => {\n\t\tsetActivePanel(e.currentTarget.dataset.to);\n\t};\n\n\treturn (\n\t\t<View activePanel={activePanel} popout={popout}>\n\t\t\t<Home id='home' fetchedUser={fetchedUser} go={go} />\n\t\t</View>\n\t);\n};\n\nexport default App;\n\n","import 'core-js/features/map';\nimport 'core-js/features/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport bridge from '@vkontakte/vk-bridge';\nimport App from './App';\n// import registerServiceWorker from './sw';\n\n// Init VK  Mini App\nbridge.send('VKWebAppInit');\n\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\n// расскомментируйте строку с registerServiceWorker();\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT\n// registerServiceWorker();\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}