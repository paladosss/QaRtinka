{"version":3,"sources":["img/jobs.jpg","panels/Home.js","App.js","index.js"],"names":["module","exports","osName","platform","jobs","require","db","Home","props","handleChangeText","e","value","target","setState","inputText","length","changeText","text","qrText","updateImage","img","state","qrImageNew","uploadFile","reader","FileReader","onloadend","qrImage","result","readAsDataURL","files","downloadImage","bridge","send","openCodeReader","donation","donationLink","qrParams","correctLevel","dotScale","size","margin","whiteMargin","colorDark","colorLight","autoColor","maskedDots","backgroundDimming","gifBackground","undefined","logoImage","logoScale","logoMargin","logoCornerRadius","binarize","binarizeThreshold","this","id","className","type","top","placeholder","onChange","maxLength","src","alt","bgSrc","callback","before","level","onClick","IOS","React","Component","App","useState","activePanel","setActivePanel","fetchedUser","setUser","codeReader","setPopout","useEffect","a","user","subscribe","detail","data","schemeAttribute","document","createAttribute","scheme","body","attributes","setNamedItem","fetchData","go","currentTarget","dataset","to","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.7da93201.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/jobs.36d787e1.jpg\";","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport bridge from '@vkontakte/vk-bridge';\nimport {platform, IOS} from '@vkontakte/vkui';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader\n\tfrom '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\nimport File from '@vkontakte/vkui/dist/components/File/File';\nimport Textarea from '@vkontakte/vkui/dist/components/Textarea/Textarea';\nimport Icon24Camera from '@vkontakte/icons/dist/24/camera';\nimport Icon24Document from '@vkontakte/icons/dist/24/document';\nimport ReactQr from 'react-awesome-qr';\nimport './Home.css'\n\nconst osName = platform();\nconst jobs = require('../img/jobs.jpg');\n// const db = require('just-debounce');\nconst db = require('debounce');\n\n// const FileSaver = require('file-saver');\n\nclass Home extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\t\n\t\tthis.state = {\n\t\t\tqrImage: jobs,\n\t\t\tqrImageNew: '',\n\t\t\tqrText: `Steven Paul «Steve» Jobs - Apple`,\n\t\t\tinputText: `Steven Paul «Steve» Jobs - Apple`,\n\t\t\tqrParams: {\n\t\t\t\tcorrectLevel: 3,\n\t\t\t\tdotScale: 0.4,\n\t\t\t\tsize: 1000,\n\t\t\t\tmargin: 20,\n\t\t\t\twhiteMargin: true,\n\t\t\t\tcolorDark: \"#000000\",\n\t\t\t\tcolorLight: \"#ffffff\",\n\t\t\t\tautoColor: true,\n\t\t\t\tmaskedDots: false,\n\t\t\t\tbackgroundDimming: 'rgba(0,0,0,0)',\n\t\t\t\tgifBackground: undefined,\n\t\t\t\tlogoImage: undefined,\n\t\t\t\tlogoScale: 0.2,\n\t\t\t\tlogoMargin: 6,\n\t\t\t\tlogoCornerRadius: 8,\n\t\t\t\tbinarize: false,\n\t\t\t\tbinarizeThreshold: 128,\n\t\t\t},\n\t\t};\n\t}\n\t\n\tcomponentDidMount() {\n\t\tthis.changeText = db(this.changeText, 3000);\n\t}\n\t\n\t// componentWillReceiveProps(nextProps, nextContext) {\n\t// \tif (nextProps.codeReader.code_data) {\n\t// \t\tconsole.log(nextProps.codeReader.code_data);\n\t// \t}\n\t// }\n\t\n\thandleChangeText = (e) => {\n\t\tconst {value} = e.target;\n\t\t\n\t\tthis.setState({inputText: value.length ? value : ''});\n\t\tthis.changeText(value);\n\t};\n\t\n\tchangeText = (text) => {\n\t\tthis.setState({qrText: text.length ? text : ''});\n\t};\n\t\n\tupdateImage = (img) => {\n\t\tif (this.state.qrImageNew !== img) {\n\t\t\tthis.setState({qrImageNew: img});\n\t\t}\n\t};\n\t\n\tuploadFile = (e) => {\n\t\tlet reader = new FileReader();\n\t\t\n\t\treader.onloadend = () => {\n\t\t\tthis.setState({qrImage: reader.result});\n\t\t};\n\t\t\n\t\treader.readAsDataURL(e.target.files[0]);\n\t};\n\t\n\tdownloadImage = () => {\n\t\tconst {qrImageNew} = this.state;\n\t\t\n\t\tbridge.send(\"VKWebAppShowStoryBox\", {\n\t\t\t\"background_type\": \"image\",\n\t\t\t\"blob\": \"data:image/png;base64,<blob-base64>\" + qrImageNew,\n\t\t});\n\t\t\n\t\t// FileSaver.saveAs(qrImageNew, \"qr.png\", {autoBom: true});\n\t};\n\t\n\topenCodeReader = () => {\n\t\tbridge.send(\"VKWebAppOpenCodeReader\", {});\n\t};\n\t\n\tdonation = () => {\n\t\tconst donationLink = 'https://vk.com/vkpay#action=transfer-to-user&user_id=34158861&from_qr=1';\n\t\t\n\t\tthis.setState({qrText: donationLink, inputText: donationLink});\n\t};\n\t\n\trender() {\n\t\tconst {id} = this.props;\n\t\tlet {qrImage, qrParams, qrText, inputText} = this.state;\n\t\t\n\t\treturn (\n\t\t\t<Panel id={id} className=\"Home\">\n\t\t\t\t<PanelHeader\n\t\t\t\t>\n\t\t\t\t\tQR код из картинки\n\t\t\t\t</PanelHeader>\n\t\t\t\t\n\t\t\t\t<Div>\n\t\t\t\t\t<Textarea type=\"text\"\n\t\t\t\t\t          top=\"Введите текст, который будет зашифрован в QR-коде\"\n\t\t\t\t\t          placeholder=\"Введите текст, который будет зашифрован в QR-коде\"\n\t\t\t\t\t          value={inputText}\n\t\t\t\t\t          onChange={this.handleChangeText}\n\t\t\t\t\t          maxLength={110}\n\t\t\t\t\t/>\n\t\t\t\t</Div>\n\t\t\t\t\n\t\t\t\t<Div className=\"qrBlock\">\n\t\t\t\t\t<Div className=\"picture\">\n\t\t\t\t\t\t<img className=\"pictureImg\" src={qrImage}\n\t\t\t\t\t\t     alt=\"picture\"/>\n\t\t\t\t\t</Div>\n\t\t\t\t\t<Div className=\"qr\">\n\t\t\t\t\t\t<ReactQr className=\"qrImg\"\n\t\t\t\t\t\t         text={qrText}\n\t\t\t\t\t\t         bgSrc={qrImage}\n\t\t\t\t\t\t         callback={img => this.updateImage(img)}\n\t\t\t\t\t\t         {...qrParams}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Div>\n\t\t\t\t</Div>\n\t\t\t\t\n\t\t\t\t<Div className=\"downloadButton\">\n\t\t\t\t\t<File top=\"Загрузите ваше изображение\" before={<Icon24Camera/>}\n\t\t\t\t\t      size=\"l\" onChange={this.uploadFile}>\n\t\t\t\t\t\tЗагрузить своё изображение\n\t\t\t\t\t</File>\n\t\t\t\t</Div>\n\t\t\t\t<Div className=\"downloadButton\">\n\t\t\t\t\t<Button size=\"m\" level=\"2\" onClick={this.openCodeReader}>\n\t\t\t\t\t\tСканировать QR-код\n\t\t\t\t\t</Button>\n\t\t\t\t\n\t\t\t\t</Div>\n\t\t\t\t\n\t\t\t\t<Div className=\"downloadButton\">\n\t\t\t\t\t<Button size=\"m\" level=\"2\" onClick={this.downloadImage}\n\t\t\t\t\t        before={<Icon24Document/>}>\n\t\t\t\t\t\tСкачать QR-код\n\t\t\t\t\t</Button>\n\t\t\t\t</Div>\n\t\t\t\t\n\t\t\t\t{osName !== IOS &&\n\t\t\t\t<Div className=\"downloadButton\">\n\t\t\t\t\t<Button size=\"m\" level=\"2\" onClick={this.donation}>\n\t\t\t\t\t\tПоддержать проект\n\t\t\t\t\t</Button>\n\t\t\t\t</Div>}\n\t\t\t</Panel>\n\t\t)\n\t}\n}\n\nHome.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n\tfetchedUser: PropTypes.shape({\n\t\tphoto_200: PropTypes.string,\n\t\tfirst_name: PropTypes.string,\n\t\tlast_name: PropTypes.string,\n\t\tcity: PropTypes.shape({\n\t\t\ttitle: PropTypes.string,\n\t\t}),\n\t}),\n\tcodeReader: PropTypes.object,\n};\n\nexport default Home;\n","import React, {useState, useEffect} from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport View from '@vkontakte/vkui/dist/components/View/View';\nimport ScreenSpinner\n\tfrom '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport Home from './panels/Home';\n\nconst App = () => {\n\tconst [activePanel, setActivePanel] = useState('home');\n\tconst [fetchedUser, setUser, codeReader] = useState(null);\n\tconst [popout, setPopout] = useState(<ScreenSpinner size='large'/>);\n\t\n\tuseEffect(() => {\n\t\tbridge.subscribe(({detail: {type, data}}) => {\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\n\t\t\t\tconst schemeAttribute = document.createAttribute('scheme');\n\t\t\t\tschemeAttribute.value = data.scheme ? data.scheme : 'client_light';\n\t\t\t\tdocument.body.attributes.setNamedItem(schemeAttribute);\n\t\t\t}\n\t\t\t\n\t\t\t// if (type === 'VKWebAppOpenCodeReaderResult') {\n\t\t\t// \tconsole.log(data.code_data);\n\t\t\t// \tcodeReader.code_data = data.code_data;\n\t\t\t// }\n\t\t\t//\n\t\t\t// if (type === 'VKWebAppOpenCodeReaderFailed') {\n\t\t\t// \tconsole.log(data.error_type, data.error_data);\n\t\t\t// \tcodeReader.error_type = data.error_type;\n\t\t\t// \tcodeReader.error_data = data.error_data;\n\t\t\t// }\n\t\t});\n\t\t\n\t\tasync function fetchData() {\n\t\t\tconst user = await bridge.send('VKWebAppGetUserInfo');\n\t\t\tsetUser(user);\n\t\t\tsetPopout(null);\n\t\t}\n\t\t\n\t\tfetchData();\n\t}, []);\n\t\n\tconst go = e => {\n\t\tsetActivePanel(e.currentTarget.dataset.to);\n\t};\n\t\n\treturn (\n\t\t<View activePanel={activePanel}\n\t\t\t// popout={popout}\n\t\t>\n\t\t\t<Home id='home' fetchedUser={fetchedUser} go={go} codeReader={codeReader}/>\n\t\t</View>\n\t);\n};\n\nexport default App;\n\n","import 'core-js/features/map';\nimport 'core-js/features/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport bridge from '@vkontakte/vk-bridge';\nimport App from './App';\n// import registerServiceWorker from './sw';\n\n// Init VK  Mini App\nbridge.send('VKWebAppInit');\n\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\n// расскомментируйте строку с registerServiceWorker();\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT\n// registerServiceWorker();\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}